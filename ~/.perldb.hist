xXML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint
x XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint
x grep( /\n/, XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint)
x XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}
x XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}g
x scalar(XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}g)
x scalar(XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n})
x scalar(XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}g)
XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}g
xXML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}g
x XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}g
x XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}g + 1
x XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}
x XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}g
@a=XML::Twig->parse( pretty_print => 'indented', discard_all_spaces => 1, $d)->sprint=~m{\n}g
x @a
print +@a
x scalar @a
x $ENV
x $Devel::Cover::VERSION
x $perl
x $perl
x $perl
x $file
x $split_opts, $merge_opts
x $perl $xml_split $verbifdebug -b $base $split_opts $file
x "$perl $xml_split $verbifdebug -b $base $split_opts $file"
x $base
x `cat $base`
x $@
x $!
x `ls t/test_xml_split`
x `cat $base`
b 345
x $p->recognized_string
x $p->original_string
x $p->original_string
x $p->original_string
b 184
b 184
x $state->{xml_declaration}
x $state->{main_fh}
x $out
x $main::out
x *main::$out
x $state
x $p->depth
b 970
l 970
b _fix_html_att_names
b 970
b 970
x eval { $tree->as_XML}
x 1 $elt
b 970
x 2 $tree
b 970
x map { "$_: $elt->{$_}" } grep { ! m{^_} } values %$elt
x map { "$_: $elt->{$_}" } grep { ! m{^_} } values %$elt
x 1 $elt
x 2 $elt
b 970
x $tree->as_XML
b _fix_html_att_names
x $elt->as_XML
b _fix_html_att_names
x $elt->as_XML
b 970
x $tree->as_XML
x $HTML::TreeBuilder::VERSION
b 1076
x $$xml
b 59
b 972
x eval { $tree->as_xml}
x eval { $tree->as_XML}
x eval { $tree->as_XML}
b 231
b 1109
l 1100
l 1108
l 1109
l 1109
b 1109
b 1110
b 1111
l 1109
l 1110
l 1111
l 1112
l 1113
b 1113
l 1156
b 1156
x $xml
b 231
l 1127
b 1127
x $att
x $node->all_attr_names
